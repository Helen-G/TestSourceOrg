<apex:page controller="BGCK.QuestionChecklistController" id="p" showHeader="true" sidebar="true" tabStyle="BGCK__Page__c">
    <div id="preloader2" style="visibility:hidden;"></div>
    <apex:sectionHeader title="Checklist" subtitle="{!pageName}">
        <apex:outputLink style="text-decoration:none;" value="/{!pid}">&lt;&lt;Back to {!parentRecordName}</apex:outputLink>
        <apex:pagemessages />
    </apex:sectionHeader>
    <apex:form id="f">
        <apex:pageBlock id="pb">
            <!-- <apex:outputLink style="font-size: 2em;font-weight: normal; color:#63a4c5;" value="/{!pid}">{!parentRecordName}</apex:outputLink> -->
            <apex:pageblockbuttons id="btn" >
                 <apex:commandButton value="Save & Complete" action="{!save}" rendered="{!((pageNumber==paVOs.size && pageType=='Wizard') || pageType!='Wizard') && isEditMode}" reRender="f,pb,pat,pbt" onclick="var con = confirm('You are going to submit the checklist!'); if(con == false) return; document.getElementById('p:f:pb:btn:btnSave').disabled=true; document.getElementById('p:f:pb:btn:btnSave').className = 'btnDisabled';document.getElementById('preloader2').style.visibility='visible';" 
                     oncomplete="document.getElementById('preloader2').style.visibility='hidden';document.getElementById('p:f:pb:btn:btnSave').disabled=false;document.getElementById('p:f:pb:btn:btnSave').className = 'btn';" id="btnSave"/>
                 <apex:commandButton value="Save" action="{!savePartial}" rendered="{!((pageNumber==paVOs.size && pageType=='Wizard') || pageType!='Wizard') && isEditMode}" reRender="f,pb,pat,pbt" onclick="var con = confirm('You are going to submit the checklist!'); if(con == false) return; document.getElementById('p:f:pb:btn:btnSave2').disabled=true; document.getElementById('p:f:pb:btn:btnSave2').className = 'btnDisabled';document.getElementById('preloader2').style.visibility='visible';" 
                     oncomplete="document.getElementById('preloader2').style.visibility='hidden';document.getElementById('p:f:pb:btn:btnSave2').disabled=false;document.getElementById('p:f:pb:btn:btnSave2').className = 'btn';" id="btnSave2"/>
                 <apex:commandbutton value="Cancel" action="{!cancel}"  immediate="true"/>                
            </apex:pageblockbuttons>
            
            <apex:repeat value="{!paVOs}" var="paVO" id="pat" >
                <apex:outputPanel rendered="{!(paVO.paIndex == pageNumber && pageType=='Wizard') || pageType=='Section'}">
                    <apex:pageBlockSection title="{!paVO.pageName}" />
                    
                    <apex:pageBlocktable value="{!paVO.pQavos}" var="qaVO" id="pbt" >
                        <apex:column headerValue="Answer" id="Answer" style="width:10%;vertical-align:top;" >
                            <apex:selectRadio value="{!qaVO.selectedAnswer}" onchange="getMatchingSubs('{!paVO.pId}','{!qaVO.question.id}',getSelectedAnswers(this),this.id);" rendered="{!(qaVO.question.Question_Type__r.Type__c='Radio Button') && ((qaVO.question.Question_Type__r.Default_Value__c!=null && qaVO.answer.Name =null)  &&  qaVO.selectedAnswer = null && (qaVO.question.Id = currentQId  && qaVO.isChanged) || isEditMode = true )  }">
                                <apex:selectOptions value="{!qaVO.answerTypes}"/>
                            </apex:selectRadio>
                            <apex:selectCheckboxes id="multiChecks" value="{!qaVO.selectedAnswers}" onchange="getMatchingSubs('{!paVO.pId}','{!qaVO.question.id}',getSelectedAnswers(this),this.id);" rendered="{!(qaVO.question.Question_Type__r.BGCK__Type__c='Checkbox - Horizontal') && (( qaVO.selectedAnswers.size = 0 && qaVO.question.id = currentQId  && qaVO.answer.Name=null && qaVO.isChanged)|| isEditMode = true)}">                    
                                <apex:selectOptions value="{!qaVO.answerTypes}"/>
                            </apex:selectCheckboxes>
                            
                            <apex:selectList id="selectLists" size="1" multiselect="false" value="{!qaVO.selectedAnswer}" onchange="getMatchingSubs('{!paVO.pId}','{!qaVO.question.id}',getSelectedAnswers(this),this.id);" rendered="{!(qaVO.question.Question_Type__r.BGCK__Type__c='Picklist') && (( qaVO.selectedAnswer = null && qaVO.question.Id = currentQId  && qaVO.answer.Name=null && qaVO.isChanged)|| isEditMode = true)}">
                                <apex:selectOptions value="{!qaVO.answerTypes}"/>
                            </apex:selectList>
                       
                            <apex:inputText value="{!qaVO.conditionalAnswer}" onblur="getMatchingSubs('{!paVO.pId}','{!qaVO.question.id}',getSelectedAnswers(this),this.id);" 
                                rendered="{!(qaVO.isNumberType) && (qaVO.conditionalAnswer = null && (qaVO.question.id = currentQId  && qaVO.isChanged)|| isEditMode = true)}" id="qText"/>
                                                                                                                                     
                            <apex:inputText value="{!qaVO.conditionalAnswer}" onblur="getMatchingSubs('{!paVO.pId}','{!qaVO.question.id}',getSelectedAnswers(this),this.id);" onfocus="DatePicker.pickDate(false,'p:f:pb:pat:{!paVO.paIndex}:pbt:{!qaVO.queIndex}:qDate', false);" 
                                rendered="{!qaVO.question.Question_Type__r.BGCK__Type__c='Date' && (qaVO.conditionalAnswer = null || (qaVO.question.id = currentQId  || qaVO.isChanged)|| isEditMode = true)}" id="qDate"/>
                           
                            <!-- display error message-->                    
                            <apex:image value="/img/func_icons/remove12_on.gif" 
                            rendered="{!qaVO.isValidAnswer!=null && (qaVO.isChanged || isClickSaved|| isEditMode = true) && isPartialSave = false}"/>
                            <apex:outputText value="{!qaVO.isValidAnswer}" 
                            rendered="{!qaVO.isValidAnswer!=null && (qaVO.isChanged || isClickSaved|| isEditMode = true)&& isPartialSave = false}"/>
                           
                            <!--<apex:image value="/img/func_icons/remove12_on.gif" rendered="{!qaVO.isValidAnswer!=null && qaVO.isChanged && qaVO.isNumberType}"/>
                            <apex:outputText value="{!qaVO.isValidAnswer}" rendered="{!qaVO.isValidAnswer!=null && qaVO.isChanged && qaVO.isNumberType}"/>
                            -->
                            
                            <!--display mode-->
                            <apex:outputText value="{!qaVO.selectedAnswer}" rendered="{!(qaVO.selectedAnswer!=null && qaVO.answer.Name!=null && !qaVO.isChanged && qaVO.question.Id!=currentQId)&& isEditMode = false}"/>
                            <apex:repeat value="{!qaVO.selectedAnswers}" var="answer" rendered="{!(qaVO.selectedAnswers!=null && qaVO.selectedAnswers.size>0 && qaVO.answer.Name!=null && !qaVO.isChanged && qaVO.question.Id!=currentQId && isEditMode = false) }">
                                <apex:outputText value="{!answer}" />
                                <apex:outputText value=""/>
                            </apex:repeat>
                            <apex:outputText value="{!qaVO.conditionalAnswer}" rendered="{!qaVO.conditionalAnswer !=null && qaVO.answer.Name!=null && !qaVO.isChanged && qaVO.question.Id!=currentQId && isEditMode = false}"/>
                            <apex:outputText value=" " rendered="{!qaVO.question.Id != currentQId&& isEditMode = false}"/>
                            
                            <!--Comment Edit link becuase James said they should not edit submitted checklist -->

                            <!--<apex:commandLink value="Edit" id="theCommandLink" reRender="pbt" rendered="{!qaVO.answer.Name!=null && !qaVO.isChanged && qaVO.question.Id!=currentQId}">
                                <apex:param name="qIndex" value="{!qaVO.question.Id}" assignTo="{!currentQId}"/>
                            </apex:commandLink>-->
                            
                        </apex:column>
                        
                        <apex:column headerValue="Question" style="width:80%;vertical-align:top;">
                            <apex:outputField Value="{!qaVO.question.BGCK__Body__c}" rendered="{!qaVO.Question.BGCK__Question__c = null}"/>
                            <!--<apex:outputPanel rendered="{!qaVO.Question.BGCK__Question__c = null}">
                                <table>
                                <tr><td><apex:outputField Value="{!qaVO.question.BGCK__Body__c}"/></td>
                                <td><img src="/img/alohaSkin/help_orange.png" title ="{!qaVO.question.Question_Tip__c}" style="{!if(qaVO.question.Question_Tip__c!=null,'display:block','display:none')}"/></td>
                                </tr></table>
                            </apex:outputPanel>-->
                            <apex:selectCheckboxes layout="pageDirection" value="{!qaVO.selectedAnswers}" rendered="{!(qaVO.question.Question_Type__r.BGCK__Type__c='Checkbox - Vertical') && (qaVO.selectedAnswers.size = 0 || qaVO.question.id = currentQId  || qaVO.answer.Name=null || qaVO.isChanged)}">
                                <apex:selectOptions value="{!qaVO.answerTypes}"/>
                            </apex:selectCheckboxes>
                            
                            
                            <!--Start only display the answered subquestion if the question answer is the criteria of subquestion-->
                            <apex:pageBlocktable value="{!qaVO.subQaVOs}" var="subQ" rendered="{!(qaVO.subQaVOs.size > 0 && qaVO.isSubCriteriaPassed && qaVO.answer.Name!=null && qaVO.question.Id!=currentQId) }" id="subQsAnswer">
                            <apex:column style="width:20%;vertical-align:top;">


                                <!--display answer mode-->

                                <apex:outputText value="{!subQ.selectedAnswer}" rendered="{!(subQ.selectedAnswer!=null && subQ.answer.Name!=null && subQ.isSubCriteriaPassed)}"/>
                                <apex:repeat value="{!subQ.selectedAnswers}" var="answer" rendered="{!(subQ.selectedAnswers.size>0 && subQ.answer.Name!=null && subQ.isSubCriteriaPassed )  }">
                                    <apex:outputText value="{!answer}" />
                                    <apex:outputText value=" "/>
                                </apex:repeat>

                                <apex:outputText value="{!subQ.conditionalAnswer}" rendered="{!subQ.conditionalAnswer !=null && subQ.answer.Name!=null && subQ.isSubCriteriaPassed }"/>
                                <apex:outputText value=" " rendered="{!subQ.question.Id != currentQId}"/>
                            </apex:column>
                             <apex:column style="width:70%;vertical-align:top;">
                                    <apex:outputfield Value="{!subQ.question.BGCK__Body__c}" rendered="{!subQ.isSubCriteriaPassed}"/>
                                </apex:column>
                            </apex:pageBlocktable>

                            <!--End display subquestion answer -->
        
                            <!-- display the sub questions questions and answers -->
                            <apex:repeat value="{!qaVO.subQaVOs}" var="subQ" rendered="{!qaVO.subQaVOs.size > 0 && !(qaVO.answer.Name!=null && !qaVO.isChanged && qaVO.question.Id!=currentQId)}" id="subQs">

                            <apex:pageBlockSection columns="2">
                                <apex:outputPanel style="width:20%">
                                    <!-- use this to store subQ Id (used for rendering the appropriate subQ when a choice is selected) -->
                                    <apex:inputHidden value="{!subQ.question.id}" id="hiddenSubQId"/>
                                    <apex:inputText onblur="" value="{!subQ.conditionalAnswer}" rendered="{!subQ.isNumberType}"/>
                                    <apex:inputText value="{!subQ.conditionalAnswer}" onfocus="DatePicker.pickDate(false,'p:f:pb:pat:{!paVO.paIndex}:pbt:{!qaVO.queIndex}:subQs:{!subQ.queIndex}:subQ', false);" 
                                        rendered="{!subQ.question.Question_Type__r.BGCK__Type__c='Date'}" id="subQ"/>
                                    <apex:image value="/img/func_icons/remove12_on.gif" rendered="{!subQ.isValidAnswer!=null}"/>
                                    <apex:outputText value="{!subQ.isValidAnswer}" rendered="{!subQ.isValidAnswer!=null}"/>
                                    <apex:selectRadio style="vertical-align:text-top;" value="{!subQ.selectedAnswer}"  onchange="" rendered="{!subQ.question.Question_Type__r.BGCK__Type__c='Radio Button'}">
                                        <apex:selectOptions value="{!subQ.answerTypes}"/>
                                    </apex:selectRadio>
                                    <apex:selectCheckboxes style="vertical-align:text-top;" id="multiChecks" onchange="" value="{!subQ.selectedAnswers}" rendered="{!(subQ.question.Question_Type__r.BGCK__Type__c='Checkbox - Horizontal')}">
                                        <apex:selectOptions value="{!subQ.answerTypes}"/>
                                    </apex:selectCheckboxes>
                                    <apex:selectList id="selectLists" onchange="" size="1" multiselect="false" value="{!subQ.selectedAnswer}"  rendered="{!subQ.question.Question_Type__r.BGCK__Type__c='Picklist'}">
                                        <apex:selectOptions value="{!subQ.answerTypes}"/>
                                    </apex:selectList>
                                </apex:outputPanel>
                                <apex:outputPanel style="width:80%">
                                    <apex:outputfield Value="{!subQ.question.BGCK__Body__c}" rendered="true"/>
                                </apex:outputPanel>
                            </apex:pageBlockSection>
                            </apex:repeat>
                        </apex:column>
                        <apex:column style="width:10%;vertical-align:top;" headerValue="Comments" rendered="{!qaVO.Question.BGCK__Question__c = null}"><apex:inputTextArea disabled="{!isEditMode = false}" value="{!qaVO.answer.BGCK__Comments__c}" onClick="commentClick(this,this.value,'{!qaVO.Question.Id}');" rows="1" id="qComment"  richText="false"/>
                        </apex:column>
                    </apex:pageBlocktable>
                    <br/>
                    <apex:commandButton style="float:left;clear:both;margin-top:-5px;" value="Previous" action="{!getPreviousPage}" rendered="{!pageType=='Wizard' && pageNumber >1}" reRender="f,pb,pat"/>
                    <apex:commandbutton style="float:right;clear:both;margin-top:-5px;" value="Next"  action="{!getNextPage}" rendered="{!pageType=='Wizard' && pageNumber < paVOs.size}" reRender="f,pb,pat"/>
                </apex:outputPanel>
            </apex:repeat>
            <apex:pagemessages />

            <script>
                function getSelectedAnswers(element)
                {
                    var answerString = '';
                    if(element.tagName == 'INPUT' && (element.type == 'radio' || element.type == 'checkbox'))
                    {
                       var prefix = element.id.substring(0,element.id.length-1);
                       //find the parent TR which includes all answers
                       var grandParent = document.getElementById(element.id).parentNode.parentNode;
                       var childs = grandParent.children;
                       var grandChilds = [];
                       for(var i = 0; i < childs.length; i++)
                       {
                           var tempList = childs[i].children;
                           for(var j = 0; j < tempList.length; j ++)
                           {
                               if(tempList[j].tagName == 'INPUT')
                               {
                                   grandChilds.push(tempList[j]);
                               }
                           }
                       }
                       for(var i = 0; i < grandChilds.length; i++)
                       {
                           if(grandChilds[i].id.indexOf(prefix) != -1 && grandChilds[i].checked == true)
                           {
                               answerString+=grandChilds[i].value;
                               answerString+=',';
                           }
                       } 
                       answerString = answerString.substring(0, answerString.length - 1);
                    } else if(element.tagName == 'SELECT')
                    {
                        answerString = element.options[element.selectedIndex].value;
                    } else if(element.tagName == 'INPUT' && element.type == 'text')
                    {
                        answerString = element.value;
                    }
                    return answerString;
                }
                        
                function showSubQuestion(Id,subQsIds)
                {
                    var idArray = subQsIds.split(',');
                    if(idArray.length <= 1)
                    {
                        subQsIds = [subQsIds];
                    } else
                    {
                        subQsIds = idArray;
                    }
                    var prefix = Id.substring(0,18);
                    var allHiddenElements = document.getElementsByTagName('INPUT');
                    var allSubs =[];
                    for(var i = 0; i < allHiddenElements.length; i++)
                    {
                        if(allHiddenElements[i].type == 'hidden' && allHiddenElements[i].id.indexOf('hiddenSubQId') != -1 && allHiddenElements[i].id.indexOf(prefix) != -1)
                        {
                            allSubs.push(allHiddenElements[i]);
                        }
                    }
                    //if nothing is selected, then hide the entire subQs table. Otherwise, show table first
                    if(subQsIds == '')
                    {
                        if(document.getElementById(prefix +':subQs') != null)
                        {
                            document.getElementById(prefix +':subQs').style.display='none';
                        }
                    } else
                    {
                        if(document.getElementById(prefix +':subQs') != null)
                        {
                            document.getElementById(prefix +':subQs').style.display='table';
                        }
                    }
                    for(var i = 0; i < allSubs.length; i++)
                    {
                        var match = 'false';
                        for(var j = 0 ; j < subQsIds.length; j++ )
                        {
                            if(allSubs[i].value == subQsIds[j])
                            {
                                match = 'true';
                            }                               
                        }
                        if(match == 'true')
                        {
                            allSubs[i].parentNode.parentNode.parentNode.parentNode.parentNode.parentNode.parentNode.style.display='block'; 
                        } else
                        {
                            allSubs[i].parentNode.parentNode.parentNode.parentNode.parentNode.parentNode.parentNode.style.display='none'; 
                        }
                    }
                }
                
               function getMatchingSubs(pid, qid, selectedAnswers, elementId) {
                    BGCK.QuestionChecklistController.getMatchingSubs(pid, qid, selectedAnswers, elementId, function(result, event){
                        if (event.status)
                        {
                            var resultString = result.split(';'); 
                            showSubQuestion(resultString[1], resultString[0]);
                        }
                    });
                }
                
                function hideOrShowQuestionLoad()
                {
                    //Hide all sub questions at first
                    var allListElements = document.getElementsByTagName('div');
                    for(var i = 0; i < allListElements.length; i++)
                    {
                        if(allListElements[i].id.indexOf(':subQs') != -1 && allListElements[i].id.indexOf(':subQsAnswer') == -1 && allListElements[i].id.indexOf('div') == -1)
                        {
                            allListElements[i].style.display='none';
                        }
                    }
                    
                    //Show some subQs when reRender the page after click Save
                    var allInputElements = document.getElementsByTagName('INPUT');
                    for(var i = 0; i < allInputElements.length; i++)
                    {
                        if((allInputElements[i].type == 'radio' || allInputElements[i].type == 'checkbox') && allInputElements[i].checked == true)
                        {
                            allInputElements[i].onchange();
                        }
                        
                        if(allInputElements[i].type == 'text' && allInputElements[i].value != '')
                        {
                            allInputElements[i].onblur();
                        }
                    }
                    
                    var allSelectElements = document.getElementsByTagName('SELECT');
                    for(var i = 0; i < allSelectElements.length; i++)
                    {
                        if(allSelectElements[i].options[allSelectElements[i].selectedIndex].value != '')
                        {
                            allSelectElements[i].onchange();
                        }
                    }
                }
                hideOrShowQuestionLoad();
            </script>
        </apex:pageBlock>
        <apex:actionFunction name="getValJS" reRender="pbt"/>
        <apex:actionFunction name="getValidateJS" reRender="subQs"/>
        <apex:actionFunction name="getCurrentCtsJS"  action="{!doCurrentCts}" reRender="sc">
            <apex:param name="qIndex" value="" assignTo="{!currentCommentId}"/>
        </apex:actionFunction>
        <!--<apex:actionFunction name="getCurrentCtJS"  action="{!doCurrentCt}" >
            <apex:param name="qIndex" value="" assignTo="{!currentCtId}"/>
        </apex:actionFunction>-->
        <style>
            #preloader2 
            {
              top: 50%;
              left: 50%;
              margin-top: image-height/2;
              margin-left: image-width/2;
              width:33px; height:30px; margin:0; padding:0;     
              background:#fff 
                url('/img/loading32.gif')
                no-repeat center center;
                position:absolute;
                z-index:999;
            }
        </style>
       
     </apex:form>
     <apex:form id="cf">
     <div id="popComment" style="position:absolute;display:none;top: 50%;left: 50%;margin-left: -200px; // 1/2 width;margin-top: -40px;">
        <apex:pageBlock title="My Comments" mode="edit" id="pbc">
            <apex:pageBlockButtons >
                <apex:commandButton value="Save" title="Save changes" onClick="copy(); return false;"/>
                <apex:commandButton value="Cancel" title="Cancel changes" onClick="cancel(); return false;"/>
            </apex:pageBlockButtons>
            <apex:pageBlockSection showHeader="false" title="My Content Section" columns="1" id="s">
                <apex:inputField value="{!aEntry.BGCK__Comments__c}" label="" id="f"/>
            </apex:pageBlockSection>
            <apex:pageBlockSection columns="1" id="sc" >            
                <apex:repeat value="{!currentCts}" var="ct">
                    <apex:CommandLink value="{!ct.Name}" reRender="sc" action="{!doCurrentCt}" oncomplete="doCurrentComment('{!currentLongComment}')" >
                        <apex:param name="ctIndex" value="{!ct.Id}" assignTo="{!currentCtId}"/>
                    </apex:CommandLink>                    
                </apex:repeat>
            </apex:pageBlockSection>
        </apex:pageBlock>
        </div>
        </apex:form>
        
            <script type="text/javascript">
            var editorPopup = document.getElementById("popComment");
            var currentCommentField;
            var editorContentField;
            var doc = document.documentElement, body = document.body;
            
            //assign the long comment to the richtext editor
            function doCurrentComment(longComment)
            {
               editorContentField.innerHTML += "<br>"+longComment;                
            }
            
            function commentClick(commentField, val,qId)
            {
                var ztop = (doc && doc.scrollTop  || body && body.scrollTop  || 0);
                editorPopup.style.top =ztop+"px";
                editorPopup.style.display="block"
                getCurrentCtsJS(qId);
                currentCommentField = commentField; 
                //var frame =document.getElementById("p:cf:pbc:s:f:textAreaDelegate_Comments__c_frame");
                //editorContentField = frame.contentWindow.document.getElementById("p:cf:pbc:s:f:textAreaDelegate_Comments__c_rta_body");
                editorContentField = document.getElementById('p:cf:pbc:s:f');
                editorContentField.value = val;
            }
            function copy()
            {
                currentCommentField.value = editorContentField.value;//get back is not richtext is content as plain text
//                currentCommentField.value = editorContentField.innerHTML; //keep formatting
                editorPopup.style.display = "none";
            }

            function cancel()
            {
                editorPopup.style.display = "none";
            }
            </script>        
</apex:page>